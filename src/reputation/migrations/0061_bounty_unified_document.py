# Generated by Django 2.2 on 2022-08-16 18:54

from django.db import migrations, models
import django.db.models.deletion


def set_bounty_unified_document(apps, schema_editor):
    Bounty = apps.get_model('reputation', 'Bounty')
    ContentType = apps.get_model('contenttypes', 'ContentType')
    ResearchhubUnifiedDocument = apps.get_model('researchhub_document', 'ResearchhubUnifiedDocument')
    Thread = apps.get_model('discussion', 'Thread')
    Comment = apps.get_model('discussion', 'Comment')
    Reply = apps.get_model('discussion', 'Reply')

    uni_doc_content_type = ContentType.objects.get_for_model(ResearchhubUnifiedDocument)

    def _get_uni_doc(obj):
        uni_doc = None
        paper = obj.paper
        if paper:
            uni_doc = paper.unified_document

        post = obj.post
        if post:
            uni_doc = post.unified_document

        peer_review = obj.peer_review
        if peer_review:
            uni_doc = peer_review.unified_document

        citation = obj.citation
        if citation:
            uni_doc = citation.source

        uni_doc_id = uni_doc.id
        return uni_doc_id

    for bounty in Bounty.objects.all().iterator():
        if bounty.item_content_type == uni_doc_content_type:
            bounty.unified_document_id = bounty.item_object_id
        else:
            model_class = ContentType.objects.get(id=bounty.item_content_type.id)
            Model = apps.get_model(model_class.app_label, model_class.model)
            obj = Model.objects.get(id=bounty.item_object_id)

            if isinstance(obj, Thread):
                uni_doc_id = _get_uni_doc(obj)
            elif isinstance(obj, Comment):
                thread = obj.parent
                uni_doc_id = _get_uni_doc(thread)
            else:
                while isinstance(obj, Reply):
                    obj = obj.parent
                thread = obj.parent
                uni_doc_id = _get_uni_doc(thread)
            bounty.unified_document_id = uni_doc_id
        bounty.save()


class Migration(migrations.Migration):

    dependencies = [
        ('researchhub_document', '0041_auto_20220705_1646'),
        ('reputation', '0060_auto_20220721_0016'),
    ]

    operations = [
        migrations.AddField(
            model_name='bounty',
            name='unified_document',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='related_bounties', to='researchhub_document.ResearchhubUnifiedDocument'),
        ),
        migrations.RunPython(set_bounty_unified_document),
        migrations.AlterField(
            model_name='bounty',
            name='unified_document',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='related_bounties', to='researchhub_document.ResearchhubUnifiedDocument')
        )
    ]
