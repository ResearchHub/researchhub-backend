name: Continuous Integration

on:
  workflow_run:
    workflows: ["Automated Tests"]
    branches: [master]
    types:
      - completed
  workflow_dispatch:
    inputs:
      deploy_env:
        description: "Select the target environment"
        required: false
        default: staging
        type: choice
        options:
          - staging
          - prod
      git_ref:
        description: "Enter Git hash or branch"
        required: false
        default: master

jobs:
  package:
    runs-on: ubuntu-latest
    if: |
      github.event_name == 'workflow_dispatch' || 
      (
        github.event_name == 'workflow_run' && 
        github.event.workflow_run.conclusion == 'success'
      )

    env:
      STAGING_DEPLOY_ROLE_ARN: ${{ vars.STAGING_DEPLOY_ROLE_ARN }}
      PROD_DEPLOY_ROLE_ARN: ${{ vars.PROD_DEPLOY_ROLE_ARN }}
      DEPLOY_ENV: ${{ github.event.inputs.deploy_env || 'staging' }}

    outputs:
      deploy_role_arn: ${{ steps.get_role_arn.outputs.role_arn }}
      short_git_sha: ${{ steps.short_git_sha.outputs.short_git_sha }}

    steps:
      - name: Workflow details
        run: |
          echo "Event: ${{ github.event_name }}"
          echo "Git reference: ${{ github.event.inputs.git_ref || github.ref }}"
          echo "Environment: ${{ env.DEPLOY_ENV }}"

      - name: Checkout application repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.git_ref }}

      - name: Set short Git SHA
        id: short_git_sha
        run: |
          SHORT_GIT_SHA=$(git rev-parse HEAD | cut -c1-7)
          echo "SHORT_GIT_SHA=$SHORT_GIT_SHA" >> "$GITHUB_ENV"
          echo "short_git_sha=$SHORT_GIT_SHA" >> "$GITHUB_OUTPUT"
          echo "Git SHA: ${SHORT_GIT_SHA}"

      - name: Checkout deploy repository
        uses: actions/checkout@v4
        with:
          repository: "researchhub/researchhub-internal-utils"
          ref: main
          path: researchhub-internal-utils
          token: ${{ secrets.PAT }}

      - name: Copy Beanstalk configuration files
        run: |
          cp -r researchhub-internal-utils/deploy/backend/config/.ebextensions \
            researchhub-internal-utils/deploy/backend/config/.platform \
            researchhub-internal-utils/deploy/backend/config/Procfile \
            src

      - name: Generate Beanstalk deployment package
        run: |
          mkdir -p target
          cd src
          zip -r ../target/deploy.zip . -x '*.git*'

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: "backend-${{ env.SHORT_GIT_SHA }}"
          path: target/deploy.zip

      - name: Get deploy role ARN
        id: get_role_arn
        run: |
          role_arn_name=${DEPLOY_ENV^^}_DEPLOY_ROLE_ARN
          role_arn=$(eval echo \$$role_arn_name)
          echo "role_arn=$role_arn" >> "$GITHUB_OUTPUT"

  deploy:
    uses: researchhub/researchhub-backend/.github/workflows/deploy_eb.yml@github-workflow-reusable-deploy
    needs: package
    with:
      deploy_env: ${{ inputs.deploy_env }}
      deploy_role_arn: ${{ needs.package.outputs.deploy_role_arn }}
      version: ${{ needs.package.outputs.short_git_sha }}
    secrets:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
